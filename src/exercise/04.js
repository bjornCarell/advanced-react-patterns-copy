// Prop Collections and Getters
// http://localhost:3000/isolated/exercise/04.js

import * as React from 'react'
import {Switch} from '../switch'

const callAll =
  (...fns) =>
  (...args) =>
    fns.forEach(fn => fn && fn(...args))

function useToggle() {
  const [on, setOn] = React.useState(false)
  const toggle = () => setOn(!on)

  return {
    on,
    toggle,
    getTogglerProps({onClick, ...togglerProps} = {}) {
      return {
        'aria-pressed': on,
        // by this onClick prop, we let the user implement
        // their own onClick handler, and it works together 
        // with our toggle function
        onClick: callAll(onClick, toggle),
        ...togglerProps,
      }
    },
  }
}

function App() {
  const {on, getTogglerProps} = useToggle()
  return (
    <div>
      {/* The getToggler props getter generates the props*/}
      <Switch {...getTogglerProps({on})} />
      <hr />
      <button
        {...getTogglerProps({
          // getTogglerProps getter makes it so that the user can 
          // customize the props returned in the useToggle Hook
          'aria-label': 'custom-button',
          // their onClick handler does not override our toggle
          // it is just added to our onClick prop in the object
          // generated by getTogglerProps getter
          onClick: () => console.info('onButtonClick'),
          id: 'custom-button-id',
        })}
      >
        {on ? 'on' : 'off'}
      </button>
    </div>
  )
}

export default App

/*
eslint
  no-unused-vars: "off",
*/
